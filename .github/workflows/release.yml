name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generateReleaseNotes: true

  build-windows:
    needs: create-release
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Debug - List source files
        run: |
          echo "Source directory contents:"
          Get-ChildItem

      - name: Build executables
        run: |
          python setup_cx.py build

      - name: Debug - List build directories
        run: |
          echo "Build directory contents:"
          Get-ChildItem -Path build -Recurse

      - name: Prepare artifacts
        run: |
          mkdir dist
          $exeDir = Get-ChildItem -Path "build" -Directory | Where-Object { $_.Name -like "exe.*" }
          if ($exeDir) {
            Copy-Item -Path "$($exeDir.FullName)\*" -Destination dist -Recurse
          }

      - name: Debug - List dist directory
        run: |
          echo "Dist directory contents:"
          Get-ChildItem -Path dist

      - name: Upload CLI artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-cli
          path: dist/image_processor.exe

      - name: Upload GUI artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-gui
          path: dist/image_processor_gui.exe

  build-macos:
    needs: create-release
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Debug - List source files
        run: |
          echo "Source directory contents:"
          ls -la

      - name: Build executables
        run: |
          python setup_cx.py build

      - name: Debug - List build output
        run: |
          echo "Build directory contents:"
          ls -la build/
          if [ -d "build" ]; then
            echo "Searching for exe directories:"
            find build -type d -name "exe.*" -print
          else
            echo "Build directory not found"
          fi

      - name: Prepare artifacts
        run: |
          mkdir -p dist
          # 查找并复制可执行文件目录中的所有内容
          EXE_DIR=$(find build -type d -name "exe.*" 2>/dev/null | head -n 1)
          if [ -n "$EXE_DIR" ] && [ -d "$EXE_DIR" ]; then
            echo "Copying from $EXE_DIR"
            cp -R "$EXE_DIR"/* dist/
          else
            echo "No exe directory found"
            # 尝试直接查找可执行文件
            find . -name "image_processor" -type f -print
            find . -name "image_processor_gui" -type f -print
          fi

      - name: Debug - List dist directory
        run: |
          echo "Dist directory contents:"
          ls -la dist/
          echo "File details in dist:"
          ls -la dist/ | while read line; do
            if [[ $line == *"."* ]]; then
              filename=$(echo $line | awk '{print $NF}')
              if [ -f "dist/$filename" ]; then
                file "dist/$filename" || echo "Could not determine file type for $filename"
              fi
            fi
          done

      - name: Fix executable permissions
        run: |
          if [ -f "dist/image_processor" ]; then
            chmod +x dist/image_processor
            echo "Made image_processor executable"
          else
            echo "CLI executable (image_processor) not found in dist"
            # 列出所有可能的可执行文件
            echo "All files in dist that might be the CLI executable:"
            find dist -type f -name "*image*" -print
          fi
          
          if [ -f "dist/image_processor_gui" ]; then
            chmod +x dist/image_processor_gui
            echo "Made image_processor_gui executable"
          else
            echo "GUI executable (image_processor_gui) not found in dist"
            # 列出所有可能的可执行文件
            echo "All files in dist that might be the GUI executable:"
            find dist -type f -name "*gui*" -print
          fi

      - name: Upload CLI artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-cli
          path: |
            dist/image_processor

      - name: Upload GUI artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-gui
          path: |
            dist/image_processor_gui

  build-linux:
    needs: create-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Debug - List source files
        run: |
          echo "Source directory contents:"
          ls -la

      - name: Build executables
        run: |
          python setup_cx.py build

      - name: Debug - List build output
        run: |
          echo "Build directory contents:"
          ls -la build/
          echo "Searching for exe directories:"
          find build -type d -name "exe.*" -print || echo "No exe directories found"

      - name: Prepare artifacts
        run: |
          mkdir -p dist
          EXE_DIR=$(find build -type d -name "exe.*" 2>/dev/null | head -n 1)
          if [ -n "$EXE_DIR" ] && [ -d "$EXE_DIR" ]; then
            echo "Copying from $EXE_DIR"
            cp -r "$EXE_DIR"/* dist/
          else
            echo "No exe directory found"
          fi

      - name: Debug - List dist directory
        run: |
          echo "Dist directory contents:"
          ls -la dist/

      - name: Fix executable permissions
        run: |
          if [ -f "dist/image_processor" ]; then
            chmod +x dist/image_processor
            echo "Made image_processor executable"
          else
            echo "CLI executable not found"
          fi

      - name: Upload CLI artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-cli
          path: |
            dist/image_processor

  upload-release-assets:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: List current directory before download
        run: |
          echo "Current directory contents before download:"
          ls -la

      - name: Download Windows CLI
        uses: actions/download-artifact@v4
        with:
          name: windows-cli

      - name: Download Windows GUI
        uses: actions/download-artifact@v4
        with:
          name: windows-gui

      - name: Download macOS CLI
        uses: actions/download-artifact@v4
        with:
          name: macos-cli

      - name: Download macOS GUI
        uses: actions/download-artifact@v4
        with:
          name: macos-gui

      - name: Download Linux CLI
        uses: actions/download-artifact@v4
        with:
          name: linux-cli

      - name: List downloaded artifacts
        run: |
          echo "Downloaded artifacts:"
          ls -la

      - name: Upload Release Assets
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          allowUpdates: true
          artifacts: "*"
          token: ${{ secrets.GITHUB_TOKEN }}